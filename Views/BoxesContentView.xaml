<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"  xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:next="clr-namespace:Unbroken.LaunchBox.Windows.Desktop;assembly=LaunchBox" xmlns:cal="http://www.caliburnproject.org" xmlns:windows="clr-namespace:Unbroken.LaunchBox.Windows;assembly=Unbroken.LaunchBox.Windows" Focusable="False" >
	<!-- FontFamily="{Binding FontFamily}" FontSize="{Binding FontSize}" FontWeight="{Binding FontWeight}" FontStyle="{Binding FontStyle}" -->
	<!-- d:DesignHeight="1020" d:DesignWidth="1980" -->
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://siteoforigin:,,,/LBThemes/lb-theme-lambda-fix/Views/Style.xaml" />
			</ResourceDictionary.MergedDictionaries>
			<Style x:Key="FocusVisualStyle">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle StrokeThickness="1" Stroke="{StaticResource LD_ForegroundBrush}" SnapsToDevicePixels="true"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<windows:ImageToSourceConverter x:Key="ImageToSourceConverter" x:Name="ImageToSourceConverter"/>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid >
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto" />
			<RowDefinition Height="Auto" />
			<RowDefinition Height="*" />
		</Grid.RowDefinitions>
		<!-- LOGO / TITLE TEXT -->
		<StackPanel  Grid.Row="0" Height="30" Margin="0,0,0,5"  HorizontalAlignment="Stretch" Orientation="Horizontal" Opacity="1"   Style="{StaticResource PlaylistTitleVisibility}" >
			<TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE7FC;" Margin="20,0,0,0" VerticalAlignment="Center" Foreground="{StaticResource LD_FadedForegroundBrush}"  />
			<TextBlock Name="Title" Margin="10,0,10,0" VerticalAlignment="Center" Foreground="{StaticResource LD_ForegroundBrush}"   />
		</StackPanel>
		<!-- NO RESULTS TEXT -->
		<StackPanel Grid.Row="2" Visibility="{Binding NoResultsVisibility}" VerticalAlignment="Top"  Margin="15">
			<TextBlock Text="{Binding NoResultsLabel}" Foreground="{StaticResource LD_ForegroundBrush}" />
		</StackPanel>
		<!-- MAIN CONTENT -->
		<ListView Grid.Row="2" Visibility="{Binding CollectionVisibility}" Name="Items" ScrollViewer.HorizontalScrollBarVisibility="Disabled" Background="Transparent" HorizontalAlignment="Stretch" VirtualizingPanel.ScrollUnit="Item" VirtualizingStackPanel.VirtualizationMode="Recycling" Margin="10,0,0,0" SelectionMode="Extended"  cal:Message.Attach=" [Event SelectionChanged] = [Action OnSelectionChanged($source, $eventArgs)]; [Event PreviewMouseRightButtonUp] = [Action OnRightClick($eventArgs)];">
			<ListView.ItemTemplate>
				<DataTemplate>
					<Grid >
						<Grid Name="container" >
							<Grid Visibility="{Binding BoxVisibility}" >
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto"  />
									<RowDefinition Height="*"  />
								</Grid.RowDefinitions>
								<!-- OBSOLETE??? (doesn't seem to work anymore) : Workaround to move margins to top for better general layout aligment  -->
								<Rectangle Grid.Row="0" Grid.Column="0"  Opacity="0"  HorizontalAlignment="Stretch" Fill="Red" Margin="{Binding Margin}" />
								<Rectangle Grid.Row="0" Grid.Column="2"  Opacity="0"  HorizontalAlignment="Stretch" Fill="Red" Margin="{Binding Margin}" />
								<Grid Grid.Row="1" Grid.Column="1" Name="box" >
									<Grid.Style>
										<Style TargetType="Grid">
											<Setter Property="Background" Value="{StaticResource LD_BoxesBackgroundBrush}"/>
											<Style.Triggers>
												<MultiDataTrigger>
													<MultiDataTrigger.Conditions>
														<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="True"/>
														<Condition Binding="{Binding IsSelected}" Value="False"/>
													</MultiDataTrigger.Conditions>
													<Setter Property="Background" Value="{StaticResource LD_HoverBackgroundBrush}"  />
												</MultiDataTrigger>
												<DataTrigger Binding="{Binding IsSelected}" Value="True">
													<Setter Property="Background" Value="{StaticResource LD_SelectionBrush}" />
												</DataTrigger>
											</Style.Triggers>
										</Style>
									</Grid.Style>
									<Grid Margin="{Binding BorderPadding}" >
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="{Binding ImageColumnWidth}" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="{Binding ImageRowHeight}"  />
											<RowDefinition Height="auto" />
										</Grid.RowDefinitions>
										<Grid Grid.Row="0" Style="{DynamicResource LD_BoxesGrid}"  >
											<!-- GAME IMAGE -->
											<Image Name="Image" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0"  Margin="0" >
												<Image.Style>
													<Style TargetType="Image">
														<Setter Property="Stretch" Value="{StaticResource LD_BoxesImageStretch}" />
													</Style>
												</Image.Style>
											</Image>
											<Border Grid.Row="0" Margin="0" Background="{StaticResource LD_BadgesBackgroundBrush}" BorderThickness="0" CornerRadius="0" BorderBrush="Transparent" VerticalAlignment="Bottom" HorizontalAlignment="Right"  Visibility="{Binding BoxVisibility}" >
												<ListView ItemsSource="{Binding Badges}" BorderThickness="0"  Background="Transparent" >
													<ListView.ItemsPanel>
														<ItemsPanelTemplate>
															<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0"/>
														</ItemsPanelTemplate>
													</ListView.ItemsPanel>
													<ListView.ItemTemplate>
														<DataTemplate>
															<Image x:Name="BadgeImage" Source="{Binding Path=Icon, Converter={StaticResource ImageToSourceConverter}}" Height="20" Margin="1" RenderOptions.BitmapScalingMode="HighQuality" ToolTip="{Binding Name}" />
														</DataTemplate>
													</ListView.ItemTemplate>
													<ListView.ItemContainerStyle>
														<Style TargetType="ListViewItem">
															<Setter Property="SnapsToDevicePixels" Value="True" />
															<Setter Property="Margin" Value="0" />
															<Setter Property="Padding" Value="0" />
															<Setter Property="Background" Value="Transparent" />
															<Setter Property="BorderThickness" Value="0" />
															<Setter Property="FocusVisualStyle" Value="{x:Null}" />
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="{x:Type ListViewItem}">
																		<ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Stretch" VerticalAlignment="Top" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</ListView.ItemContainerStyle>
												</ListView>
											</Border>
										</Grid>
										<Grid Grid.Row="1">
											<Grid.Resources>
												<Style TargetType="TextBlock" >
													<Setter Property="Foreground" Value="{StaticResource LD_ForegroundBrush}"/>
													<Setter Property="TextAlignment" Value="{Binding TextAlignment}"/>
													<Style.Triggers>
														<MultiDataTrigger>
															<MultiDataTrigger.Conditions>
																<Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}, Path=IsMouseOver}" Value="True"/>
																<Condition Binding="{Binding IsSelected}" Value="False"/>
															</MultiDataTrigger.Conditions>
														</MultiDataTrigger>
														<DataTrigger Binding="{Binding IsSelected}" Value="True">
															<Setter Property="Foreground" Value="{StaticResource LD_SelectionBackgroundBrush}" />
														</DataTrigger>
													</Style.Triggers>
												</Style>
											</Grid.Resources>
											<Border >
												<StackPanel Orientation="Vertical"  Opacity="1" HorizontalAlignment="Stretch"   Margin="0,0,0,0"   >
													<StackPanel Height="{Binding MaxTextHeight}"  Margin="{Binding TextMargin}" >
														<StackPanel>
															<TextBlock Text="{Binding Title}"  TextWrapping="Wrap" TextTrimming="CharacterEllipsis"    />
														</StackPanel>
														<!-- SUBLINE REGULAR TEXT -->
														<StackPanel>
															<TextBlock Foreground="{StaticResource LD_FadedForegroundBrush}" Visibility="{Binding SublineVisibility}" Text="{Binding Description}" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="0,0,0,0"  Opacity="1"  />
														</StackPanel>
													</StackPanel>
													<StackPanel>
														<TextBlock Foreground="{StaticResource LD_FadedForegroundBrush}" Visibility="{Binding SublineVisibility}"  TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" Margin="0,0,0,0"   >
															<TextBlock.Text >
																<MultiBinding StringFormat="{}{0} {1}">
																	<Binding Path="Game.ReleaseDate.Year" />
																	<Binding Path="Game.Platform" />
																</MultiBinding>
															</TextBlock.Text>
														</TextBlock>
													</StackPanel>
												</StackPanel>
											</Border>
										</Grid>
										<!-- HOVER ICONS -->
										<Grid Canvas.ZIndex="1" Grid.Row="0" Grid.RowSpan="1" Background="Transparent" Visibility="{Binding HoverIconsVisibility}"  >
											<Grid.RowDefinitions>
												<RowDefinition Height="60*" />
												<RowDefinition Height="40*" />
											</Grid.RowDefinitions>
											<Grid Grid.Row="1" Background="Transparent" cal:Message.Attach="[Event MouseEnter] = [Action OnIconsMouseEnter()];">
												<Grid.RowDefinitions>
													<RowDefinition Height="50*" />
													<RowDefinition Height="50*" />
												</Grid.RowDefinitions>
												<Grid Grid.Row="1" Background="#e0000000">
													<Grid.ColumnDefinitions>
														<ColumnDefinition Width="25*" />
														<ColumnDefinition Width="25*" />
														<ColumnDefinition Width="25*" />
														<ColumnDefinition Width="25*" />
													</Grid.ColumnDefinitions>
													<Button x:Name="Details" Grid.Column="0" Margin="{Binding ButtonMargin}" cal:Message.Attach="[Event Click] = [Action Details()];">
														<Button.Template>
															<ControlTemplate TargetType="{x:Type Button}">
																<Image RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" HorizontalAlignment="Center" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}">
																	<Image.Style>
																		<Style TargetType="{x:Type Image}">
																			<Setter Property="Source" Value="pack://application:,,,/WpfResources/Details.png" />
																			<Style.Triggers>
																				<Trigger Property="IsMouseOver" Value="True">
																					<Setter Property="Source" Value="pack://application:,,,/WpfResources/DetailsHover.png" />
																				</Trigger>
																				<Trigger Property="IsEnabled" Value="False">
																					<Setter Property="Opacity" Value="0.5" />
																				</Trigger>
																			</Style.Triggers>
																		</Style>
																	</Image.Style>
																</Image>
															</ControlTemplate>
														</Button.Template>
													</Button>
													<Button x:Name="Zoom" Grid.Column="1" Margin="{Binding ButtonMargin}" IsEnabled="{Binding ZoomEnabled}" cal:Message.Attach="[Event Click] = [Action Zoom()];">
														<Button.Template>
															<ControlTemplate TargetType="{x:Type Button}">
																<Image RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" HorizontalAlignment="Center" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" IsEnabled="{Binding ZoomEnabled}">
																	<Image.Style>
																		<Style TargetType="{x:Type Image}">
																			<Setter Property="Source" Value="pack://application:,,,/WpfResources/Zoom.png" />
																			<Style.Triggers>
																				<Trigger Property="IsMouseOver" Value="True">
																					<Setter Property="Source" Value="pack://application:,,,/WpfResources/ZoomHover.png" />
																				</Trigger>
																				<Trigger Property="IsEnabled" Value="False">
																					<Setter Property="Opacity" Value="0.5" />
																				</Trigger>
																			</Style.Triggers>
																		</Style>
																	</Image.Style>
																</Image>
															</ControlTemplate>
														</Button.Template>
													</Button>
													<Button x:Name="Flip" Grid.Column="2" Margin="{Binding ButtonMargin}" IsEnabled="{Binding FlipEnabled}" cal:Message.Attach="[Event Click] = [Action Flip()];">
														<Button.Template>
															<ControlTemplate TargetType="{x:Type Button}">
																<Image RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" HorizontalAlignment="Center" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" IsEnabled="{Binding FlipEnabled}">
																	<Image.Style>
																		<Style TargetType="{x:Type Image}">
																			<Setter Property="Source" Value="pack://application:,,,/WpfResources/Flip.png" />
																			<Style.Triggers>
																				<Trigger Property="IsMouseOver" Value="True">
																					<Setter Property="Source" Value="pack://application:,,,/WpfResources/FlipHover.png" />
																				</Trigger>
																				<Trigger Property="IsEnabled" Value="False">
																					<Setter Property="Opacity" Value="0.5" />
																				</Trigger>
																			</Style.Triggers>
																		</Style>
																	</Image.Style>
																</Image>
															</ControlTemplate>
														</Button.Template>
													</Button>
													<Button x:Name="PlayMusic" Grid.Column="3" Margin="{Binding ButtonMargin}" IsEnabled="{Binding PlayMusicEnabled}" cal:Message.Attach="[Event Click] = [Action PlayMusic()];">
														<Button.Template>
															<ControlTemplate TargetType="{x:Type Button}">
																<Image RenderOptions.BitmapScalingMode="HighQuality" Stretch="Uniform" HorizontalAlignment="Center" Height="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=ActualHeight}" IsEnabled="{Binding PlayMusicEnabled}">
																	<Image.Style>
																		<Style TargetType="{x:Type Image}">
																			<Setter Property="Source" Value="pack://application:,,,/WpfResources/Music.png" />
																			<Style.Triggers>
																				<Trigger Property="IsMouseOver" Value="True">
																					<Setter Property="Source" Value="pack://application:,,,/WpfResources/PlayMusicHover.png" />
																				</Trigger>
																				<Trigger Property="IsEnabled" Value="False">
																					<Setter Property="Opacity" Value="0.5" />
																				</Trigger>
																			</Style.Triggers>
																		</Style>
																	</Image.Style>
																</Image>
															</ControlTemplate>
														</Button.Template>
													</Button>
												</Grid>
												<Grid.Style>
													<Style>
														<Setter Property="Grid.Opacity" Value="0" />
														<Style.Triggers>
															<Trigger Property="Grid.IsMouseOver" Value="True">
																<Setter Property="Grid.Opacity" Value="1.0" />
															</Trigger>
														</Style.Triggers>
													</Style>
												</Grid.Style>
											</Grid>
										</Grid>
									</Grid>
								</Grid>
							</Grid>
						</Grid>
						<Border HorizontalAlignment="Stretch" VerticalAlignment="Center"  Margin="0,10,10,10" MinWidth="200" BorderBrush="{StaticResource LD_LineSeparatorBrush}" BorderThickness="0,0,0,1" Visibility="{Binding SeparatorVisibility}" SnapsToDevicePixels="true" >
							<!--  Margin="{Binding Margin}" -->
							<StackPanel Orientation="Horizontal" HorizontalAlignment="Left"  Margin="0,0,0,10" >
								<TextBlock Text="{Binding SortType}" Foreground="{StaticResource LD_FadedForegroundBrush}"  Opacity="1.0"  FontWeight="Normal" />
								<TextBlock  Text="  :  " Foreground="{StaticResource LD_FadedForegroundBrush}"   FontWeight="Normal" />
								<TextBlock  Text="{Binding SortValue}" Width="auto" Foreground="{StaticResource LD_ForegroundBrush}"  FontWeight="Normal" />
							</StackPanel>
						</Border>
					</Grid>
				</DataTemplate>
			</ListView.ItemTemplate>
			<ListView.ItemContainerStyle>
				<Style TargetType="ListViewItem">
					<Setter Property="SnapsToDevicePixels" Value="True" />
					<Setter Property="Margin" Value="0" />
					<Setter Property="Padding" Value="0" />
					<Setter Property="Background" Value="Transparent" />
					<Setter Property="BorderBrush" Value="Transparent" />
					<Setter Property="BorderThickness" Value="0" />
					<Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
					<Setter Property="FocusVisualStyle">
						<Setter.Value>
							<Style>
								<Setter Property="Control.Template">
									<Setter.Value>
										<ControlTemplate>
											<Rectangle StrokeThickness="0" Stroke="{StaticResource LD_ForegroundBrush}" SnapsToDevicePixels="true" Margin="{Binding FocusVisualStyleMargin}" VerticalAlignment="Top" Height="0" />
										</ControlTemplate>
									</Setter.Value>
								</Setter>
							</Style>
						</Setter.Value>
					</Setter>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListViewItem}">
								<ContentPresenter x:Name="ContentPresenter" HorizontalAlignment="Stretch" VerticalAlignment="Top" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Style.Triggers>
						<DataTrigger Binding="{Binding IsSeparator}" Value="True">
							<Setter Property="IsHitTestVisible" Value="False" />
							<Setter Property="IsEnabled" Value="False" />
						</DataTrigger>
					</Style.Triggers>
				</Style>
			</ListView.ItemContainerStyle>
			<ListView.ItemsPanel>
				<ItemsPanelTemplate>
					<next:VirtualizingTilePanel x:Name="VirtualizingTilePanel" Margin="0" VirtualizingPanel.ScrollUnit="Pixel" ChildSize="{Binding BoxChildSize}" cal:Message.Attach="[Event Loaded] = [Action OnVirtualizingTilePanelLoaded($source, $eventArgs)]" />
				</ItemsPanelTemplate>
			</ListView.ItemsPanel>
			<ListView.Resources>
				<Style TargetType="ScrollBar">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ScrollBar">
								<Track Name="PART_Track" IsDirectionReversed="true" Margin="8,0,0,0" ViewportSize="8">
									<Track.Resources>
										<system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">120</system:Double>
									</Track.Resources>
									<Track.DecreaseRepeatButton>
										<RepeatButton Name="DecreaseRepeatButton" Command="ScrollBar.PageUpCommand" Background="{StaticResource LD_MainBackgroundBrush}" Focusable="False">
											<RepeatButton.Template>
												<ControlTemplate TargetType="RepeatButton">
													<Grid>
														<Border Name="Border" Background="#00000000" BorderThickness="0" CornerRadius="0,0,0,0"/>
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
															<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollbarUnfocusBrush}" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</RepeatButton.Template>
										</RepeatButton>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Name="IncreaseRepeatButton" Command="ScrollBar.PageDownCommand" Background="{StaticResource LD_MainBackgroundBrush}" Focusable="False">
											<RepeatButton.Template>
												<ControlTemplate TargetType="RepeatButton">
													<Grid>
														<Border Name="Border" Background="#00000000" CornerRadius="0,0,0,0"/>
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
															<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollbarUnfocusBrush}" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</RepeatButton.Template>
										</RepeatButton>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Focusable="True" FocusVisualStyle="{StaticResource FocusVisualStyle}">
											<Thumb.Template>
												<ControlTemplate TargetType="Thumb">
													<Border Name="Border"  Background="{StaticResource ScrollbarUnfocusBrush}" BorderThickness="0" CornerRadius="0"/>
													<ControlTemplate.Triggers>
														<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
															<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollbarFocusBrush}" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Thumb.Template>
										</Thumb>
									</Track.Thumb>
								</Track>
								<ControlTemplate.Triggers>
									<Trigger SourceName="PART_Track" Property="IsEnabled" Value="false">
										<Setter TargetName="PART_Track" Property="Visibility" Value="Hidden"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ListView.Resources>
			<ListView.Template>
				<ControlTemplate TargetType="ListView">
					<Border Name="Border" BorderThickness="0">
						<ScrollViewer>
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Border Background="{TemplateBinding Background}">
										<Grid Margin="0,0,5,0">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="*" />
												<ColumnDefinition Width="7" />
											</Grid.ColumnDefinitions>
											<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" />
											<ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" HorizontalAlignment="Right" />
											<ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="0" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}" />
										</Grid>
									</Border>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</ListView.Template>
		</ListView>
	</Grid>
</UserControl>