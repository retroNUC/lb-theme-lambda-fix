<?xml version="1.0"?>
<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:cal="http://www.caliburnproject.org" xmlns:next="clr-namespace:Unbroken.LaunchBox.Windows.Desktop;assembly=LaunchBox" xmlns:system="clr-namespace:System;assembly=mscorlib" xmlns:controls="clr-namespace:Unbroken.LaunchBox.Windows.Desktop.Controls;assembly=LaunchBox"  Focusable="False">
	<!-- d:DesignHeight="600" d:DesignWidth="800" FontFamily="{Binding FontFamily}" FontSize="{Binding FontSize}" FontWeight="{Binding FontWeight}" FontStyle="{Binding FontStyle}" -->
	<UserControl.Resources>
		<ResourceDictionary>
			<ResourceDictionary.MergedDictionaries>
				<ResourceDictionary Source="pack://siteoforigin:,,,/LBThemes/Lambda beta 1.1/Views/Style.xaml"/>
			</ResourceDictionary.MergedDictionaries>
			<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
			<Style x:Key="ExpandCollapseToggleStyle" TargetType="ToggleButton">
				<Setter Property="Focusable" Value="False"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="ToggleButton">
							<Grid Width="15" Height="15">
								<TextBlock Text="AA" Opacity="0"/> <!-- Somehow this makes the expand arrow's hitbox a bit more flexible :) -->
								<Path x:Name="ExpandPath" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0" Fill="{StaticResource LD_ButtonForegroundBrush}" Data="M 4 0 L 10 5 L 4 10 Z"/>
								<!-- Fill="{Binding ElementName=Items, Path=Foreground}" -->
							</Grid>
							<ControlTemplate.Triggers>
								<Trigger Property="IsChecked" Value="True">
									<Setter Property="Data" TargetName="ExpandPath" Value="M 2 3 L 12 3 L 7 9 Z"/>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="TreeViewItemFocusVisual">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Border>
								<Rectangle StrokeThickness="1" Stroke="{StaticResource LD_ForegroundBrush}"/>
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style TargetType="{x:Type TreeViewItem}">
				<Setter Property="Background" Value="Transparent"/>
				<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
				<Setter Property="Padding" Value="0,1,5,1"/>
				<Setter Property="Foreground" Value="{Binding ElementName=Items, Path=Foreground}"/>
				<Setter Property="FocusVisualStyle" Value="{StaticResource TreeViewItemFocusVisual}"/>
				<Setter Property="IsSelected" Value="{Binding Selected, Mode=TwoWay}"/>
				<Setter Property="IsExpanded" Value="{Binding Expanded, Mode=TwoWay}"/>
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type TreeViewItem}">
							<ControlTemplate.Resources>
								<next:LeftMarginMultiplierConverter Length="{StaticResource SideBarTreeViewIndent}" x:Key="LengthConverter"/>
							</ControlTemplate.Resources>
							<StackPanel>
								<Border Name="Bd" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Padding="{TemplateBinding Padding}" CornerRadius="0,0,0,0" SnapsToDevicePixels="True">
									<Grid Margin="{Binding Converter={StaticResource LengthConverter}, RelativeSource={RelativeSource TemplatedParent}}">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="{Binding ElementName=TreeViewToggleButtonWidthBorder, Path=Width}"/>
											<ColumnDefinition/>
										</Grid.ColumnDefinitions>
										<ToggleButton x:Name="Expander" Style="{StaticResource ExpandCollapseToggleStyle}" IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
										<ContentPresenter x:Name="PART_Header" Grid.Column="1" ContentSource="Header" Margin="0,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
									</Grid>
								</Border>
								<ItemsPresenter x:Name="ItemsHost"/>
							</StackPanel>
							<ControlTemplate.Triggers>
								<Trigger Property="IsExpanded" Value="false">
									<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
								</Trigger>
								<Trigger Property="HasItems" Value="false">
									<Setter TargetName="Expander" Property="Visibility" Value="Hidden"/>
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="HasHeader" Value="false"/>
										<Condition Property="Width" Value="Auto"/>
									</MultiTrigger.Conditions>
									<Setter TargetName="PART_Header" Property="MinWidth" Value="75"/>
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="HasHeader" Value="false"/>
										<Condition Property="Height" Value="Auto"/>
									</MultiTrigger.Conditions>
									<Setter TargetName="PART_Header" Property="MinHeight" Value="19"/>
								</MultiTrigger>
								<Trigger Property="IsSelected" Value="true">
									<Setter Property="Foreground" Value="{Binding ElementName=SelectionBorder, Path=Background}"/>
									<Setter Property="Background" Value="{StaticResource LD_SelectionBrush}"/>
									<!-- selection background -->
									<Setter TargetName="Bd" Property="BorderBrush" Value="Red"/>
									<Setter TargetName="Bd" Property="BorderThickness" Value="0,0,0,0"/>
									<!-- <Setter Property="FontWeight" Value="SemiBold"/> -->
								</Trigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="true"/>
										<Condition Property="IsExpanded" Value="false"/>
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource LD_HoverBackgroundBrush}"/>
									<!--    <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding ElementName=HoverBorder, Path=BorderBrush}" /> -->
									<!--    <Setter TargetName="Bd" Property="BorderThickness" Value="0" /> -->
									<Setter Property="Background" Value="Red"/>
									<!-- <Setter Property="Foreground" Value="{Binding ElementName=Search, Path=Foreground}"/> -->
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsMouseOver" Value="true"/>
										<Condition Property="IsSelected" Value="true"/>
									</MultiTrigger.Conditions>
									<Setter TargetName="Bd" Property="Background" Value="{StaticResource LD_SelectionBrush}"/>
									<!--   <Setter TargetName="Bd" Property="BorderBrush" Value="{Binding ElementName=HoverBorder, Path=BorderBrush}" /> -->
									<!--   <Setter TargetName="Bd" Property="BorderThickness" Value="0" /> -->
									<!-- <Setter Property="Foreground" Value="{Binding ElementName=Search, Path=Foreground}"/> -->
								</MultiTrigger>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsSelected" Value="true"/>
										<Condition Property="IsSelectionActive" Value="false"/>
									</MultiTrigger.Conditions>
								</MultiTrigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
			<Style x:Key="FocusVisualStyle">
				<Setter Property="Control.Template">
					<Setter.Value>
						<ControlTemplate>
							<Rectangle StrokeThickness="1" Stroke="{StaticResource LD_ForegroundBrush}" SnapsToDevicePixels="true"/>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Style>
		</ResourceDictionary>
	</UserControl.Resources>
	<Grid x:Name="Grid" Background="Transparent" Margin="0,0,0,0">
		<Grid.RowDefinitions>
			<RowDefinition Height="30"/>
			<!-- menu / title height -->
			<RowDefinition Height="15"/>
			<!-- spacer -->
			<RowDefinition Height="30"/>
			<!-- searchbox -->
			<RowDefinition Height="15"/>
			<!-- spacer -->
			<RowDefinition Height="30"/>
			<!-- combobox button -->
			<RowDefinition Height="*"/>
			<!-- list -->
		</Grid.RowDefinitions>
		<!-- FAKE OBJECTS USED FOR COLOR BINDING -->
		<Border Grid.Row="0" x:Name="SelectionBorder" Background="{StaticResource LD_SelectionBackgroundBrush}" Visibility="Collapsed"/>
		<!--		<Border Grid.Row="0" x:Name="HoverSelectionBorder" Background="{StaticResource LD_HoverSelectionBackgroundBrush}" Visibility="Collapsed"/> -->
		<Border Grid.Row="0" x:Name="HoverBorder" Background="{StaticResource LD_HoverBackgroundBrush}" Visibility="Collapsed"/>
		<Border Grid.Row="0" x:Name="TreeViewToggleButtonWidthBorder" Width="{Binding TreeViewToggleButtonWidth}" Visibility="Collapsed"/>
		<Border Grid.Row="0" x:Name="ComboHoverBorder" Background="Transparent" Visibility="Collapsed"/>
		<!-- THEME SPECIFIC ITEMS -->
		<Border Background="Transparent"/>
		<Border Grid.Row="1">
			<Border.Background>
				<SolidColorBrush Color="Transparent"/>
				<!-- COMBOBOX BACKGROUND -->
			</Border.Background>
		</Border>
		<!-- MENU  -->
		<StackPanel Orientation="Horizontal" HorizontalAlignment="Left" Width="Auto" VerticalAlignment="Stretch" Margin="0,0,0,0">
			<Button Name="Menu" Focusable="True" Margin="5,0,0,0" WindowChrome.IsHitTestVisibleInChrome="True" Padding="5">
				<Button.FocusVisualStyle>
					<Style>
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle StrokeThickness="1" Stroke="{StaticResource LD_ButtonForegroundBrush}" SnapsToDevicePixels="true" Margin="0"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Button.FocusVisualStyle>
				<Button.Template>
					<ControlTemplate TargetType="{x:Type Button}">
						<StackPanel Name="MenuStyle" Width="Auto" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
							<TextBlock Margin="5" Foreground="{StaticResource LD_ButtonForegroundBrush}" FontWeight="Bold" FontFamily="Segoe MDL2 Assets" Text="&#xE700;" VerticalAlignment="Center"/>
							<!-- E712 / E700 -->
						</StackPanel>
						<ControlTemplate.Triggers>
							<Trigger SourceName="MenuStyle" Property="IsMouseOver" Value="True">
								<Setter TargetName="MenuStyle" Property="Background" Value="{StaticResource LD_HoverBackgroundBrush}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Button.Template>
			</Button>
		</StackPanel>
		<!-- SEARCH BOX -->
		<Rectangle Grid.Row="2" Fill="{StaticResource LD_SearchRowBackgroundBrush}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-5,0,-5,0"/>
		<Grid Grid.Row="2" VerticalAlignment="Center">
			<Border BorderThickness="1" BorderBrush="{StaticResource LD_SearchBorderBrush}" SnapsToDevicePixels="True" Margin="0,0,5,0">
				<TextBox Text="" Background="{StaticResource LD_SearchBackgroundBrush}" VerticalAlignment="Center" BorderThickness="0" Padding="2"/>
			</Border>
			<TextBlock VerticalAlignment="Center" Foreground="{StaticResource LD_FadedSearchForegroundBrush}" Margin="40,0,5,0" Visibility="{Binding ElementName=Search, Path=Text.IsEmpty, Converter={StaticResource BooleanToVisibilityConverter}}">
				<TextBlock.Text>
					<MultiBinding StringFormat="{}{0}...">
						<Binding Path="SearchLabel"/>
					</MultiBinding>
				</TextBlock.Text>
			</TextBlock>
			<TextBox Name="Search" Background="Transparent" Margin="35,0,40,0" VerticalAlignment="Center" HorizontalAlignment="Stretch" Foreground="{StaticResource LD_SearchForegroundBrush}" CaretBrush="{StaticResource LD_SearchForegroundBrush}" BorderThickness="0" Text="{Binding Path=SearchText, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" FocusVisualStyle="{StaticResource FocusVisualStyle}" WindowChrome.IsHitTestVisibleInChrome="True"/>
			<!-- E71C E721 searh icons -->
			<Label Name="SearchIcon" VerticalAlignment="Center" VerticalContentAlignment="Center" Margin="10,0,0,0" FontFamily="Segoe MDL2 Assets" Content="&#xE71C;" Foreground="{StaticResource LD_SearchForegroundBrush}" Padding="0, 0, 13, 0" HorizontalAlignment="Left" WindowChrome.IsHitTestVisibleInChrome="True" SnapsToDevicePixels="True"/>
			<Button Name="SearchClear" ToolTip="Clear" Width="33" Height="16" Margin="0,3,8,0" Background="Transparent" BorderThickness="0" HorizontalAlignment="Right" VerticalAlignment="Top" Visibility="{Binding SearchClearVisibility}" FocusVisualStyle="{StaticResource FocusVisualStyle}" WindowChrome.IsHitTestVisibleInChrome="True">
				<Grid>
					<Polygon Points="12,0 14,0 17,3 20,0 22,0 18,4 22,8 20,8 17,5 14,8 12,8 16,4" StrokeThickness="0" Fill="{StaticResource LD_SearchForegroundBrush}"/>
				</Grid>
				<Button.Style>
					<Style TargetType="Button">
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type Button}">
									<Border Name="Border" BorderThickness="0" Background="{TemplateBinding Background}" CornerRadius="0,0,0,0">
										<ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
									</Border>
									<ControlTemplate.Triggers>
										<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
											<Setter TargetName="Border" Property="Background" Value="{StaticResource LD_HoverBackgroundBrush}"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</Button.Style>
			</Button>
		</Grid>
		<!-- COMBO BOX -->
		<ComboBox Grid.Row="4" Name="ListTypeItems" ItemsSource="{Binding ListTypeItems}" SelectedItem="{Binding Path=SelectedListTypeItem, Mode=TwoWay}" FocusVisualStyle="{StaticResource FocusVisualStyle}" VerticalAlignment="Center" Margin="5,0,5,0">
			<ComboBox.ItemContainerStyle>
				<Style TargetType="ComboBoxItem">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ComboBoxItem">
								<Border Name="Bd" BorderThickness="0" Padding="25,2,12,2" Background="{TemplateBinding Background}" CornerRadius="0,0,0,0">
									<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
					<Setter Property="Foreground" Value="{StaticResource LD_FadedForegroundBrush}"/>
					<Setter Property="FontWeight" Value="Normal"/>
					<Style.Triggers>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Foreground" Value="{Binding ElementName=SelectionBorder, Path=Background}"/>
							<!-- <Setter Property="FontWeight" Value="SemiBold"/> -->
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource LD_HoverBackgroundBrush}"/>
							<Setter Property="Foreground" Value="{StaticResource LD_ForegroundBrush}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true"/>
								<Condition Property="IsSelected" Value="true"/>
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{StaticResource LD_SelectionBrush}"/>
						</MultiTrigger>
					</Style.Triggers>
				</Style>
			</ComboBox.ItemContainerStyle>
			<ComboBox.Style>
				<Style TargetType="ComboBox">
					<Setter Property="SnapsToDevicePixels" Value="true"/>
					<Setter Property="OverridesDefaultStyle" Value="true"/>
					<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
					<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
					<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
					<Setter Property="MinWidth" Value="50"/>
					<Setter Property="MinHeight" Value="20"/>
					<Setter Property="Foreground" Value="{StaticResource LD_ButtonForegroundBrush}"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ComboBox">
								<Grid>
									<ToggleButton Name="ToggleButton" Focusable="false" IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press">
										<ToggleButton.Template>
											<ControlTemplate TargetType="ToggleButton">
												<Grid>
													<Grid.ColumnDefinitions>
														<ColumnDefinition/>
														<ColumnDefinition Width="30"/>
													</Grid.ColumnDefinitions>
													<Border x:Name="Border" Grid.ColumnSpan="2" Background="Transparent" SnapsToDevicePixels="True"/>
													<Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource LD_ButtonForegroundBrush}" HorizontalAlignment="Left" Margin="5,4,10,0" VerticalAlignment="Center" Data="M 0 0 L 4 4 L 8 0 Z" Opacity="1"/>
													<!-- arrow down -->
													<TextBlock Margin="5,2,0,0" VerticalAlignment="Center" Foreground="{StaticResource LD_ButtonForegroundBrush}" FontFamily="Segoe MDL2 Assets" Text="&#xEA37;"/>
												</Grid>
												<ControlTemplate.Triggers>
													<Trigger Property="ToggleButton.IsMouseOver" Value="true">
														<!-- <Setter TargetName="Arrow" Property="Fill" Value="{Binding ElementName=SelectionBorder, Path=Background}" /> -->
														<Setter TargetName="Border" Property="Background" Value="{StaticResource LD_HoverBackgroundBrush}"/>
													</Trigger>
													<Trigger Property="ToggleButton.IsChecked" Value="true">
														<Setter TargetName="Border" Property="Background" Value="{StaticResource LD_SelectionBrush}"/>
													</Trigger>
												</ControlTemplate.Triggers>
											</ControlTemplate>
										</ToggleButton.Template>
									</ToggleButton>
									<ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="35,0,0,0" VerticalAlignment="Center" HorizontalAlignment="Left"/>
									<!-- Category button -->
									<TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}">
										<TextBox.Template>
											<ControlTemplate TargetType="TextBox">
												<Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
											</ControlTemplate>
										</TextBox.Template>
									</TextBox>
									<Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False" PopupAnimation="Scroll">
										<Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
											<Border x:Name="DropDownBorder" Background="{StaticResource LD_MainBackgroundBrush}" Opacity="1">
												<ScrollViewer Margin="0" SnapsToDevicePixels="True">
													<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
													<ScrollViewer.Resources>
														<Style TargetType="ScrollBar">
															<Setter Property="Template">
																<Setter.Value>
																	<ControlTemplate TargetType="ScrollBar">
																		<Track Name="PART_Track" IsDirectionReversed="true" Margin="5,0,5,15" ViewportSize="4">
																			<Track.Resources>
																				<system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">120</system:Double>
																			</Track.Resources>
																			<Track.DecreaseRepeatButton>
																				<RepeatButton Name="DecreaseRepeatButton" Command="ScrollBar.PageUpCommand" Background="Transparent">
																					<RepeatButton.Template>
																						<ControlTemplate TargetType="RepeatButton">
																							<Grid>
																								<Border Name="Border" Background="#44888888" BorderThickness="0" CornerRadius="0,0,0,0"/>
																							</Grid>
																							<ControlTemplate.Triggers>
																								<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
																									<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollbarUnfocusBrush}"/>
																								</Trigger>
																							</ControlTemplate.Triggers>
																						</ControlTemplate>
																					</RepeatButton.Template>
																				</RepeatButton>
																			</Track.DecreaseRepeatButton>
																			<Track.IncreaseRepeatButton>
																				<RepeatButton Name="IncreaseRepeatButton" Command="ScrollBar.PageDownCommand" Background="Transparent">
																					<RepeatButton.Template>
																						<ControlTemplate TargetType="RepeatButton">
																							<Grid>
																								<Border Name="Border" Background="#44888888" CornerRadius="0,0,0,0"/>
																							</Grid>
																							<ControlTemplate.Triggers>
																								<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
																									<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollbarUnfocusBrush}"/>
																								</Trigger>
																							</ControlTemplate.Triggers>
																						</ControlTemplate>
																					</RepeatButton.Template>
																				</RepeatButton>
																			</Track.IncreaseRepeatButton>
																			<Track.Thumb>
																				<Thumb>
																					<Thumb.Template>
																						<ControlTemplate TargetType="Thumb">
																							<Border Name="Border" Background="{StaticResource ScrollbarUnfocusBrush}" BorderThickness="0" CornerRadius="0"/>
																							<ControlTemplate.Triggers>
																								<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
																									<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollbarFocusBrush}"/>
																								</Trigger>
																							</ControlTemplate.Triggers>
																						</ControlTemplate>
																					</Thumb.Template>
																				</Thumb>
																			</Track.Thumb>
																		</Track>
																		<ControlTemplate.Triggers>
																			<Trigger SourceName="PART_Track" Property="IsEnabled" Value="false">
																				<Setter TargetName="PART_Track" Property="Visibility" Value="Hidden"/>
																			</Trigger>
																		</ControlTemplate.Triggers>
																	</ControlTemplate>
																</Setter.Value>
															</Setter>
														</Style>
													</ScrollViewer.Resources>
												</ScrollViewer>
											</Border>
										</Grid>
									</Popup>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="IsGrouping" Value="true">
										<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
									</Trigger>
									<Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
										<Setter TargetName="DropDownBorder" Property="Margin" Value="0"/>
									</Trigger>
									<Trigger Property="IsEditable" Value="true">
										<Setter Property="IsTabStop" Value="false"/>
										<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
										<Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</ComboBox.Style>
		</ComboBox>
		<!-- TREE VIEW -->
		<TreeView Grid.Row="5" Name="Items" Margin="5,0,5,0" Background="Transparent" ItemsSource="{Binding Nodes}" cal:Message.Attach="[Event SelectedItemChanged] = [Action OnSelectedItemChanged($eventArgs)]" HorizontalContentAlignment="Stretch" HorizontalAlignment="Stretch" VirtualizingStackPanel.IsVirtualizing="True" BorderThickness="0">
			<TreeView.ItemTemplate>
				<HierarchicalDataTemplate ItemsSource="{Binding Nodes}">
					<DockPanel LastChildFill="True" HorizontalAlignment="Stretch">
						<TextBlock Foreground="{StaticResource LD_FadedForegroundBrush}" Padding="2,2" Text="{Binding Count}" TextAlignment="Right" DockPanel.Dock="Right" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.RightCountVisibility}"/>
						<TextBlock Padding="15,2" Text="{Binding Value}" TextAlignment="Left" TextTrimming="CharacterEllipsis" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ValueWithoutCountVisibility}"/>
						<TextBlock Padding="15,2" Text="{Binding ValueWithCount}" TextAlignment="Left" TextTrimming="CharacterEllipsis" Visibility="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.ValueWithCountVisibility}"/>
					</DockPanel>
				</HierarchicalDataTemplate>
			</TreeView.ItemTemplate>
			<TreeView.Style>
				<Style TargetType="TreeView">
					<Setter Property="BorderThickness" Value="0"/>
					<Setter Property="Foreground" Value="{StaticResource LD_ForegroundBrush}"/>
					<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
				</Style>
			</TreeView.Style>
			<TreeView.Resources>
				<Style TargetType="ScrollBar">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="ScrollBar">
								<Track Name="PART_Track" IsDirectionReversed="true" Margin="5,0,0,0" ViewportSize="4">
									<Track.Resources>
										<system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarButtonHeightKey}">120</system:Double>
									</Track.Resources>
									<Track.DecreaseRepeatButton>
										<RepeatButton Name="DecreaseRepeatButton" Command="ScrollBar.PageUpCommand" Background="Transparent">
											<RepeatButton.Template>
												<ControlTemplate TargetType="RepeatButton">
													<Grid>
														<Border Name="Border" Background="#00000000" BorderThickness="0" CornerRadius="0,0,0,0"/>
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
															<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollbarUnfocusBrush}"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</RepeatButton.Template>
										</RepeatButton>
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Name="IncreaseRepeatButton" Command="ScrollBar.PageDownCommand" Background="Transparent">
											<RepeatButton.Template>
												<ControlTemplate TargetType="RepeatButton">
													<Grid>
														<Border Name="Border" Background="#00000000" CornerRadius="0,0,0,0"/>
													</Grid>
													<ControlTemplate.Triggers>
														<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
															<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollbarUnfocusBrush}"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</RepeatButton.Template>
										</RepeatButton>
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb>
											<Thumb.Template>
												<ControlTemplate TargetType="Thumb">
													<Border Name="Border" Background="{StaticResource ScrollbarUnfocusBrush}" BorderThickness="0" CornerRadius="0"/>
													<ControlTemplate.Triggers>
														<Trigger SourceName="Border" Property="IsMouseOver" Value="True">
															<Setter TargetName="Border" Property="Background" Value="{StaticResource ScrollbarFocusBrush}"/>
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Thumb.Template>
										</Thumb>
									</Track.Thumb>
								</Track>
								<ControlTemplate.Triggers>
									<Trigger SourceName="PART_Track" Property="IsEnabled" Value="false">
										<Setter TargetName="PART_Track" Property="Visibility" Value="Hidden"/>
									</Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
				<system:Double x:Key="{x:Static SystemParameters.VerticalScrollBarWidthKey}">12</system:Double>
			</TreeView.Resources>
		</TreeView>
	</Grid>
</UserControl>